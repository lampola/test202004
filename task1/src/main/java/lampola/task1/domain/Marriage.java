package lampola.task1.domain;

import java.util.Date;
import java.util.List;

import javax.persistence.Entity;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.validation.constraints.NotBlank;
import javax.validation.constraints.NotNull;

import org.hibernate.validator.constraints.Length;
import org.springframework.data.jpa.domain.AbstractPersistable;
import org.springframework.format.annotation.DateTimeFormat;

import com.fasterxml.jackson.annotation.JsonIgnore;

import lombok.Getter;
import lombok.Setter;

@Entity
@Getter // Getters and setters are generated by Lombok
@Setter
public class Marriage extends AbstractPersistable<Long> {
	
	@NotBlank(message = "Social security number is mandatory")
    @Length(min = 11, max = 11)
	private String husbandSsn;
	
	@NotBlank(message = "Social security number is mandatory")
    @Length(min = 11, max = 11)
	private String wifeSsn;
	
    @Temporal(TemporalType.DATE)
    @DateTimeFormat(pattern="yyyy-MM-dd")
	@NotNull(message = "Start date is mandatory")
    private Date started;
    
    @Temporal(TemporalType.DATE)
    @DateTimeFormat(pattern="yyyy-MM-dd")
    private Date ended;
    
    @ManyToOne
    private Person husband;
    
    @ManyToOne
    private Person wife;
    
    @OneToMany
    private List<Person> children;
}
